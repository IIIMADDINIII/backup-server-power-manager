import { Type, type Static } from '@sinclair/typebox';
import { Value } from "@sinclair/typebox/value";

// Generated by:
// https://sinclairzx81.github.io/typebox-workbench/?share=ZXhwb3J0IHR5cGUgQmFzZVN0YXR1cyA9IHttYW51YWxNb2RlOiBib29sZWFufTsKZXhwb3J0IHR5cGUgU3RhdHVzVW5rbm93biA9IHtzdGF0dXM6ICJ1bmtub3duIn0gJiBCYXNlU3RhdHVzOwpleHBvcnQgdHlwZSBTdGF0dXNTdG9wcGVkID0ge3N0YXR1czogInN0b3BwZWQifSAmIEJhc2VTdGF0dXM7CmV4cG9ydCB0eXBlIFN0YXR1c1N0YXJ0aW5nID0ge3N0YXR1czogInN0YXJ0aW5nIn0gJiBCYXNlU3RhdHVzOwpleHBvcnQgdHlwZSBTdGF0dXNTdGFydGVkID0ge3N0YXR1czogInN0YXJ0ZWQifSAmIEJhc2VTdGF0dXM7CmV4cG9ydCB0eXBlIFN0YXR1c1N0b3BwaW5nID0ge3N0YXR1czogInN0b3BwaW5nIn0gJiBCYXNlU3RhdHVzOwpleHBvcnQgdHlwZSBQb3dlclN0YXR1cyA9IFN0YXR1c1Vua25vd24gfCBTdGF0dXNTdG9wcGVkIHwgU3RhdHVzU3RhcnRpbmcgfCBTdGF0dXNTdGFydGVkIHwgU3RhdHVzU3RvcHBpbmc7
// export type BaseStatus = { manualMode: boolean; };
// export type StatusUnknown = { status: "unknown"; } & BaseStatus;
// export type StatusStopped = { status: "stopped"; } & BaseStatus;
// export type StatusStarting = { status: "starting"; } & BaseStatus;
// export type StatusStarted = { status: "started"; } & BaseStatus;
// export type StatusStopping = { status: "stopping"; } & BaseStatus;
// export type PowerStatus = StatusUnknown | StatusStopped | StatusStarting | StatusStarted | StatusStopping;

/**
 * @public
 */
export type BaseStatus = Static<typeof BaseStatus>;
/**
 * @public
 */
export const BaseStatus = Type.Object({
  manualMode: Type.Boolean()
});

/**
 * @public
 */
export type StatusUnknown = Static<typeof StatusUnknown>;
/**
 * @public
 */
export const StatusUnknown = Type.Intersect([
  Type.Object({
    status: Type.Literal('unknown')
  }),
  BaseStatus
]);

/**
 * @public
 */
export type StatusStopped = Static<typeof StatusStopped>;
/**
 * @public
 */
export const StatusStopped = Type.Intersect([
  Type.Object({
    status: Type.Literal('stopped')
  }),
  BaseStatus
]);

/**
 * @public
 */
export type StatusStarting = Static<typeof StatusStarting>;
/**
 * @public
 */
export const StatusStarting = Type.Intersect([
  Type.Object({
    status: Type.Literal('starting')
  }),
  BaseStatus
]);

/**
 * @public
 */
export type StatusStarted = Static<typeof StatusStarted>;
/**
 * @public
 */
export const StatusStarted = Type.Intersect([
  Type.Object({
    status: Type.Literal('started')
  }),
  BaseStatus
]);

/**
 * @public
 */
export type StatusStopping = Static<typeof StatusStopping>;
/**
 * @public
 */
export const StatusStopping = Type.Intersect([
  Type.Object({
    status: Type.Literal('stopping')
  }),
  BaseStatus
]);

/**
 * @public
 */
export type PowerStatus = Static<typeof PowerStatus>;
/**
 * @public
 */
export const PowerStatus = Type.Union([
  StatusUnknown,
  StatusStopped,
  StatusStarting,
  StatusStarted,
  StatusStopping
]);

/**
 * Validates a Powerstatus Object.
 * @param powerStatus - Object to validate.
 * @public
 */
export function assertPowerStatus(powerStatus: unknown): asserts powerStatus is PowerStatus {
  const error = Value.Errors(PowerStatus, powerStatus).First();
  if (error !== undefined) throw new Error(`${error.path.slice(1).replaceAll("/", ".")}: ${error.message}`);
}